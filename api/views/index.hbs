<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://fonts.googleapis.com/css2?family=Work+Sans:wght@200&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Raleway&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Lato&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.5.0.js"></script>
    <script src="https://kit.fontawesome.com/ed06971682.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="/css/data.css">
    <title>Zimbabwe Land Commission</title>
</head>
<body onbeforeunload="showSpinner('block')">
    {{>nav}}
    <section class="mt-3">
        <div class="data-container container-fluid">
            <div class="row m-auto">
                <div class="info">
                    <div class="dropdown col-md-3">
                        <input 
                        class="myInput" 
                        onclick="show()" 
                        type="text" 
                        placeholder="Select Table..">
                        <div id="myDropdown" class="dropdown-content">
                            <option value="clear" id="clear">Clear</option>
                            <option value="beneficiary_details" id="beneficiary-details">Beneficiary Details</option>
                            <option value="boom_sprayers" id="boom-sprayers">Boom Sprayers</option>
                            <option value="spouse_details" id="spouse-details">Spouse Details</option>
                            <option value="plot_farm_identification" id="plot">Plot Farm Identification</option>
                        </div>
                    </div>
                    <div class="col-lg-9">
                        <form class="container" id="form">
                            <input type="text" id="select" value="SELECT" class="query" readonly>
                            <input 
                            type="text" 
                            id="fields" 
                            placeholder="Enter fields" 
                            class="query"
                            data-toggle="tooltip" 
                            data-placement="top" 
                            title="Type in any field name you want to select from a given table 
                                   or type in * to select all fields/columns of a table.
                                   If you don't know how to run queries use the Select Table input field on your left
                                   or consult the ICT department">
                            <input type="text" id="from" value="FROM" class="query" readonly>
                            <input 
                            type="text" 
                            id="tablename" 
                            placeholder="Enter table name" 
                            class="query">
                            <button type="submit" id="run" class="query">Run Query</button>
                        </form>
                    </div>
                </div>
                <div class="info" id="stats">
                    <div class="col-md-6 pl-4" id="search_table">
                        <select data-toggle="tooltip" data-placement="top" title="Search this table by any field in the dropdown" name="search" id="search-criteria"></select>
                        <input type="text" id="search_by_id" placeholder="Search table...">
                    </div>
                    <div class="col-md-6 pr-5">
                        <span data-toggle="tooltip" data-placement="top" title="Table Name" class="table-name" id="counter"></span>
                        <span data-toggle="tooltip" data-placement="top" title="Number of Records" class="counter" id="counter"></span>
                        <span>
                            <button
                            type="button" 
                            class="print printer"
                            data-toggle="modal" 
                            data-target="#exampleModal" 
                            data-whatever="@mdo">
                            <i data-toggle="tooltip" data-placement="top" title="Print Table" class="fas fa-print"></i>
                            </button>
                        </span>
                        <span class="print download"  
                        data-toggle="modal" 
                        data-target="#exampleModal" 
                        data-whatever="@mdo">
                        <i data-toggle="tooltip" data-placement="top" title="Download (CSV file)" class="fas fa-download"></i>
                        </span>
                        <span><button class="print"><i class="fas fa-plus-circle"></i></button></span>
                    </div>
                </div>
                <div id="loader" aria-placeholder="loading..."></div>

                <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                    <div class="modal-header">
                        <h6 class="modal-title" id="exampleModalLabel">Request passcord from your manager to proceed</h6>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form>
                        <div class="form-group">
                            <input type="password" class="form-control" id="recipient-name" placeholder="Passcord...">
                        </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="download" class="btn btn-secondary btn-sm" data-dismiss="modal">Download</button>
                        <button type="button" id="print" class="btn btn-secondary btn-sm proceed" data-dismiss="modal">Print</button>
                    </div>
                    </div>
                </div>
                </div>
                <table id="table" cellspacing="2" cellpadding="2">
                    <thead>
                        
                    </thead>
                    <tbody>
                
                    </tbody>
                </table>
            </div>
        </div>
    </section>
    <script>

        $(document).ready(function(){
            $('[data-toggle="tooltip"]').tooltip();
        });

        const show = () => {
            document.getElementById("myDropdown").classList.toggle("show");
        }

        const showSpinner = (display) => {
            const me = document.getElementById('loader')
            document.getElementById("loader").style.display = display;
            document.querySelector('.myInput').value = ''
            document.querySelectorAll('.query')[1].value = ''
            document.querySelectorAll('.query')[3].value = ''
        }

        const filterSearch = () => {
            input = document.querySelector('.myInput')
            filter = input.value.toUpperCase()
            div = document.querySelector('#myDropdown')
            option = div.getElementsByTagName('option')

            for(let i=0; i < option.length; i++) {
                txtValue = option[i].textContent || option[i].innerText;
                if(txtValue.toUpperCase().indexOf(filter) > -1) {
                    option[i].style.display = ''
                } else {
                    option[i].style.display = 'none'
                }
            }
        }

        document.querySelector('#myDropdown').addEventListener('click', (e) => {
            if(e.target.value === 'clear') {
                show()
                document.querySelector('#stats').style.display = 'none'
                document.querySelector('table').classList.add('table')
            } else {
                fetchData(e.target.value)
                document.querySelector('table').classList.remove('table')
            }
        })

        document.querySelector('.myInput').addEventListener('keyup', filterSearch)

        const searchData = (criteria) => {
            input = document.querySelector('#search_by_id')
            filter = input.value.toUpperCase().trim()
            table = document.getElementById('table')
            tr = table.getElementsByTagName('tr')

            let count = 0
            for(let i=0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName('td')[criteria]
                if(td) {
                    txtValue = td.textContent || td.innerText
                    if(txtValue.toUpperCase().trim().indexOf(filter) > -1) {
                        tr[i].style.display = ''
                        tr[i].classList.add('rows')
                        count++
                    } else {
                        tr[i].style.display = 'none'
                    }
                }
            }

            $('.counter').html(count).css('display', 'inline-block')
        }


        const printData = () => {
            const table = document.getElementById('table')
            let htmlToPrint = `
            <style type="text/css">
            table {
                color: #062F4F;
                background-color: #969494;
                border-collapse: collapse;
                width: 100%;
            }

            thead { border-bottom: 1px solid #062F4F}

            tbody tr:nth-child(even) { background-color: #adadad}
            tbody tr:nth-child(odd) { background-color: #969494}

            th, td {
                padding-right: 10px;
            }
            </style>`;
            htmlToPrint += table.outerHTML
            newWin = window.open("")
            newWin.document.write(htmlToPrint)
            newWin.print()
            setTimeout(() => newWin.close(), 2000)
        }

        document.querySelector('#print').addEventListener('click', (e) => {
            const passcord = document.querySelector('#recipient-name').value.trim()
            if(passcord !== 'cain') return
            printData()
        })

        const fetchData = value => {
            show()
            showSpinner('block')
            const thead = $("thead")
            const tbody = $("tbody")
            const searchParent = $('#search-criteria')
            const search_table = $('#search_table')
            thead.html('')
            tbody.html('')
            search_table.css('display', 'block')
            searchParent.html('')

            fetch(`/data/table?table=${value}`).then((response) => {
                response.json().then((info) => {

                    localStorage.setItem('info', JSON.stringify(info))

                    const table = JSON.parse(localStorage.getItem('info'))

                    showSpinner('none')
                    const headers = Object.keys(table[0])

                    let tr = ''
                    let option = '<option value="0" class="new-option">search_by:</option>'
                    let searchValue = 0
                    for(let i = 0; i < headers.length; i++) {
                        let header = headers[i]
                        tr += `<th> ${header} </th>`
                        option += `<option value="${searchValue+i}" class="new-option">${header} </option>`
                    }

                    let rows = '<tr>'
                    table.forEach((row) => {
                        let data = ''
                        for(let key in row) {
                            if(row[key] === null) {
                                data += `<td> </td>`
                            } else {
                                data += `<td> ${row[key]} </td>`
                            }
                            
                        }
                        rows += data + '</tr>'
                    })

                    thead.append('<tr>'+ tr + '</tr>')
                    tbody.append(rows)
                    searchParent.append(option)

                    document.querySelector('#search-criteria').addEventListener('click', (data) => {
                        document.querySelector('#search_by_id').addEventListener('keyup', (e) => {
                            searchData(data.target.value)
                        })
                    })

                    $('.counter').html(table.length).css('display', 'inline-block')
                    $('.table-name').html(value).css('display', 'inline-block')
                    document.querySelector('.print').style.display = 'inline-block'
                    document.querySelector('#stats').style.display = 'flex'

                }).catch((error) => {
                    tbody.append(`<p> No data to display, try again... </p>`)
                })
            })
        }


        const queryData = (select, fields, from, tablename) => {
            showSpinner('block')
            const thead = $("thead")
            const tbody = $("tbody")
            const searchParent = $('#search-criteria')
            const search_table = $('#search_table')
            thead.html('')
            tbody.html('')
            search_table.css('display', 'block')
            searchParent.html('')

            fetch(`/data/query?select=${select}&fields=${fields}&from=${from}&table=${tablename}`).then((response) => {
                response.json().then((info) => {
                    localStorage.setItem('info', JSON.stringify(info))

                    const table = JSON.parse(localStorage.getItem('info'))

                    showSpinner('none')
                    document.querySelector('#run').innerText = 'Run Query'
                    const headers = Object.keys(table[0])

                    let tr = ''
                    let option = '<option class="new-option">search_by:</option>'
                    let searchValue = 0
                    for(let i = 0; i < headers.length; i++) {
                        let header = headers[i]
                        tr += `<th> ${header} </th>`
                        option += `<option value="${searchValue+i}" class="new-option">${header} </option>`
                    }

                    let rows = '<tr>'
                    table.forEach((row) => {
                        let data = ''
                        for(let key in row) {
                            if(row[key] === null) {
                                data += `<td> </td>`
                            } else {
                                data += `<td> ${row[key]} </td>`
                            }
                            
                        }
                        rows += data + '</tr>'
                    })

                    thead.append('<tr>'+ tr + '</tr>')
                    tbody.append(rows)
                    searchParent.append(option)

                    document.querySelector('#search-criteria').addEventListener('click', (data) => {
                        document.querySelector('#search_by_id').addEventListener('keyup', (e) => {
                            searchData(data.target.value)
                        })
                    })

                    const tname = tablename.split(' ')
                
                    document.querySelector('#stats').style.display = 'flex'
                    $('.counter').html(table.length).css('display', 'inline-block')
                    $('.table-name').html(tname[0]).css('display', 'inline-block')
                    document.querySelector('.print').style.display = 'inline-block'

                }).catch((error) => {
                    tbody.append(`<p> No data to display, try again... </p>`)
                })
            })
        }

        document.querySelector('#run').addEventListener('focus', () => {
            const select = document.querySelector('#select')
            document.querySelector('#run').innerHTML = '<div class="spinners"></div>loading...'
        })

        document.querySelector('#form').addEventListener('submit', (e) => {
            e.preventDefault()
            const select = document.querySelector('#select').value.trim()
            const fields = document.querySelector('#fields').value.trim()
            const from = document.querySelector('#from').value.trim()
            const table = document.querySelector('#tablename').value.trim()
            document.querySelector('#run').innerHTML = '<div class="spinners"></div>loading...'
            if(select === '' || fields === '' || from === '' || table === '') {
                document.querySelector('#run').innerText = 'Run Query'
                return
            } else {
                queryData(select, fields, from, table)
                document.querySelector('table').classList.remove('table')
            }

            const formData = {
                select,
                fields,
                from,
                table
            }
        })

        function download() {
            var rows = document.querySelectorAll('tbody > tr');
            // Construct csv
            var csv = [];
            for (var i = 0; i < rows.length; i++) {
                var row = [], cols = rows[i].querySelectorAll('td,th');
                for (var j = 0; j < cols.length; j++) {
                    // Clean innertext to remove multiple spaces and jumpline (break csv)
                    var data = cols[j].innerText.replace(/(\r\n|\n|\r)/gm, '').replace(/(\s\s)/gm, ' ')
                    // Escape double-quote with double-double-quote (see https://stackoverflow.com/questions/17808511/properly-escape-a-double-quote-in-csv)
                    data = data.replace(/"/g, '""');
                    // Push escaped string
                    row.push('"' + data + '"');
                }
                csv.push(row.join(','));
            }
            var csv_string = csv.join('\n');
            // Download it
            var filename = 'export_'+ new Date().toLocaleDateString() + '.csv';
            var link = document.createElement('a');
            link.style.display = 'none';
            link.setAttribute('target', '_blank');
            link.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv_string));
            link.setAttribute('download', filename);
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        document.querySelector('.printer').addEventListener('click', () => document.querySelector('#recipient-name').value = '')
        document.querySelector('.download').addEventListener('click', () => document.querySelector('#recipient-name').value = '')
        document.querySelector('#download').addEventListener('click', (e) => {
            const passcord = document.querySelector('#recipient-name').value.trim()
            if(passcord !== 'cain') return
            download()
            console.log('Document printed')
        })

        //------------------ Sign out ------------------------------------------------------------\\
        setTimeout(() => {
            window.location.href = '/signup_home'
        }, 3600000)

        document.querySelector('#account-user').innerHTML = `
        <button class="btn btn-outline-secondary btn-sm logout">Logout</button>
        `
        document.querySelector('.logout').addEventListener('click', () => {
            window.location.href = '/signup_home'
        })


    </script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js" integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI" crossorigin="anonymous"></script>
</body>
</html>